[project]
name = "jfchemistry"
description = "JFChemistry"
license = { file = "LICENSE" }
version = "0.0.1"
readme = "README.md"
keywords = []
authors = [{ name = "Carson Farmer" }]
requires-python = ">=3.12"
dependencies = []

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.dependencies]
python = ">=3.12.11,<3.13"
jobflow = ">=0.2.0,<0.3"
rdkit = "*"
ase = ">=3.26.0,<4"
pymatgen = ">=2025.10.7,<2026"
openbabel = ">=3.1.1,<4"
pip = ">=25.2,<26"
tblite = ">=0.4.0,<0.5"
tblite-python = ">=0.4.0,<0.5"
rich = "<14"
cuda = ">=13.0.2,<14"
cuda-nvrtc = ">=13.0.88,<14"
crest = ">=3.0.2,<4"

[tool.pixi.pypi-dependencies]
jfchemistry = { path = ".", editable = true }
tomli-w = ">=1.2.0,<2"

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }
aimnet2 = { features = ["aimnet2"], solve-group = "default" }
orb = { features = ["orb"], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }

[tool.pixi.feature.aimnet2.pypi-dependencies]
aimnet = { git = "https://github.com/cfarm6/aimnetcentral.git", branch = "numpy2.0" }
torch = ">=2.8.0,<3"

[tool.pixi.feature.orb.pypi-dependencies]
orb_models = { git = "https://github.com/orbital-materials/orb-models.git" }
torch = ">=2.8.0,<3"

[tool.pixi.feature.dev.tasks]
fmt = { cmd = "ruff format ." }
lint = { cmd = "ruff check . --fix" }
types = { cmd = "ty check" }
test = { cmd = "pytest" }
all = { depends-on = ["fmt", "lint", "types", "test"] }

[tool.pixi.feature.dev.dependencies]
pytest = ">=8.3"
pytest-cov = ">=6.0"
ruff = ">=0.11"
pre-commit = ">=4.2"
pytest-xdist = "*"

[tool.pixi.feature.dev.pypi-dependencies]
ty = "*"

[tool.pixi.feature.docs.pypi-dependencies]
mkdocs-material = "*"
mkdocs = ">=1.6.1,<2"
mkdocstrings-python = "*"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "B",      # bugbear
    "D",      # pydocstyle
    "E",      # pycodestyle errors
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming conventions
    "W",      # pycodestyle warnings
    "C4",     # comprehensions
    "PL",     # pylint
    "PT",     # flake8-pytest-style
    "PIE",    # misc lints
    "PYI",    # flake8-pyi
    "TID",    # tidy imports
    "TCH",    # type-checking imports
    "RUF",    # Ruff-specific rules
    "RSE",    # flake8-raise
    "ICN001", # unconventional-import-alias
]
ignore = [
    "N806", # Non-lowercase variable in function
    # "PLR0911", # Too many returns
    "PLR0912", # Too many branches
    # "PLR0913", # Too many arguments to function call
    # "PLR0914", # Too many locals
    # "PLR0915", # Too many statements
    # "PLR1702", # Too many nested-blocks
    "PLC0415", # Import-outside-top-level
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.pytest.ini_options]
testpaths = ["tests", "jfchemistry"]
addopts = "--doctest-modules --doctest-continue-on-failure"
doctest_optionflags = "NORMALIZE_WHITESPACE"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]
